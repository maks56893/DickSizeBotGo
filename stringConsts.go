package main

import (
	"math/rand"
	"strconv"
	"time"
)

var listMeasure = [...]string{
	"ะััะฝะฐั ัะธะณะฐัะฐ ั ัะตะฑั ",
	"ะะปะฐะดัะธะน ั ัะตะฑั ",
	"ะะธัะพะฝ ะฒ ะบัััะฐั ั ัะตะฑั ",
	"ะงัะฟะฐััะฟั ั ัะตะฑั ",
	"ะะฐะณะธะฑะฐัะตะปั ั ัะตะฑั ",
	"ะัั ั ัะตะฑั ",
	"ะะพะปะปะธะฟะฐะฟ ั ัะตะฑั ",
	"ะัั ั ัะตะฑั ",
	"ะะปะฐะดัะธะน ั ัะตะฑั ",
	"ะะพะปัะตะฑะฝะฐั ะฟะฐะปะพัะบะฐ ั ัะตะฑั ",
	"ะะตะฝะธั ั ัะตะฑั ",
	"ะัััะน ะะถะพะฝะฝะธ ะกะธะฝั ั ัะตะฑั ",
	"ะะธััะปัะบะฐ ั ัะตะฑั ",
	"ะะธััะฝ ั ัะตะฑั ",
	"ะะธััััะฝ ั ัะตะฑั ",
	"ะขะฐะปะฐะฝั ั ัะตะฑั ",
	"ะะพะปั ั ัะตะฑั ",
	"ะกััััะพะบ ั ัะตะฑั ",
	"ะงะปะตะฝ ั ัะตะฑั ",
	"ะฅะพะฑะพัะพะบ ั ัะตะฑั ",
	"ะะธััะฝะดะตะปั ั ัะตะฑั ",
	"ะัะธะฑะพัะตะบ ั ัะตะฑั ",
	"21 ะฟะฐะปะตั ั ัะตะฑั ",
	"ะะธะฟะบะฐ ั ัะตะฑั ",
	"ะะฐะปัั ั ัะตะฑั ",
	"ะะปะฐะดัะธะน ะดััะถะพะบ ั ัะตะฑั ",
}

var listOfSmallDickEmoji = [...]string{
	"๐",
	"๐",
	"๐ข",
	"๐ฅฒ",
	"๐",
	"๐",
	"๐",
	"๐ฃ",
	"๐",
	"๐จ",
	"๐",
	"๐",
}

var listOfBigDickEmoji = [...]string{
	"๐",
	"๐คญ",
	"๐ฎ",
	"๐ฑ",
	"๐ฏ",
	"๐",
	"๐",
	"๐",
	"๐",
	//	"๐",
}

var listOfTodayDicks = [...]string{
	"ัะปะตะฝั",
	"ะผะพัะบะพะฒะบะธ",
	"ัะดะฐะฒั",
	"ะฟะธัะพะฝั",
	"ััะฟะฐััะฟัั",
	"ัััััะบะธ",
	"ะฒะพะปัะตะฑะฝัะต ะฟะฐะปะพัะบะธ",
	"ะฟะตะฝะธัั",
	"ัะธัะบะธ",
	"ะปัััะต ะะถะพะฝะฝะธ ะกะธะฝัั",
}

var listAverage = [...]string{
	"<i>ะฃััะตะดะฝัะฝะฝัะต ะผะปะฐะดัะธะต ะฒะฐัะธ</i>\n\n ",
	"<i>ะฃััะตะดะฝัะฝะฝัะต ัะปะตะฝั</i>\n\n ",
	"<i>ะฃััะตะดะฝัะฝะฝัะต ัััััะบะธ</i>\n\n ",
	"<i>ะฃััะตะดะฝัะฝะฝัะต ะฒะพะปัะตะฑะฝัะต ะฟะฐะปะพัะบะธ</i>\n\n ",
	"<i>ะฃััะตะดะฝัะฝะฝัะต ะบะพะทััะธ ะฒ ััะบะฐะฒะต</i>\n\n ",
	"<i>ะฃััะตะดะฝัะฝะฝัะต ััะฟะฐััะฟัั</i>\n\n ",
	"<i>ะฃััะตะดะฝัะฝะฝัะต ะฟะตัะธัั</i>\n\n ",
	"<i>ะฃััะตะดะฝัะฝะฝัะต ะฑะพะปัั</i>\n\n ",
	"<i>ะฃััะตะดะฝัะฝะฝัะต ัะพะฑะพัะบะธ</i>\n\n ",
	"<i>ะฃััะตะดะฝัะฝะฝัะต ะปัััะต ะะถะพะฝะฝะธ ะกะธะฝัั</i>\n\n ",
}

func GetRandMeasureReplyPattern(dickSize int) string {
	rand.Seed(time.Now().UnixNano())
	var res string
	if dickSize < 20 {
		res = listMeasure[rand.Intn(len(listMeasure))] + strconv.Itoa(dickSize) + "ัะผ" + listOfSmallDickEmoji[rand.Intn(len(listOfSmallDickEmoji))]
	} else {
		res = listMeasure[rand.Intn(len(listMeasure))] + strconv.Itoa(dickSize) + "ัะผ" + listOfBigDickEmoji[rand.Intn(len(listOfBigDickEmoji))]
	}

	return res
}

func GetRandAverageReplyText() string {
	rand.Seed(time.Now().UnixNano())
	return listAverage[rand.Intn(len(listAverage))]
}

func GetRandTodayReplyText() string {
	rand.Seed(time.Now().UnixNano())
	return "<b>ะกะฒะตะถะธะต (ะธ ะฝะต ะพัะตะฝั โ๏ธ) " + listOfTodayDicks[rand.Intn(len(listOfTodayDicks))] + "\n\n</b>"
}
